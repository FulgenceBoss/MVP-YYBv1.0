# DOCUMENT DE RÉFÉRENCE - DÉVELOPPEMENT DASHBOARD ADMIN YESSI-YESSI
# Mis à jour le: 25/06/2025

---

### STACK TECHNIQUE
- **Framework :** React (via Vite)
- **Dépendances :** Aucune dépendance supplémentaire pour le moment.

---

### ÉTAT ACTUEL DU PROJET (Point de reprise)

- **Objectif Atteint :** Affichage de la première métrique (Taux d'Activation) et mise en place d'une authentification sécurisée.
- **Action Réalisée :**
  1.  **Backend :** Création d'un endpoint `/api/admin/login` sécurisé via des variables d'environnement.
  2.  **Frontend :** Remplacement de la méthode de collage de token par un formulaire de connexion email/mot de passe robuste, avec gestion de la session via le `localStorage`.
  3.  Le tableau de bord est maintenant fonctionnel, sécurisé, et affiche une première métrique clé.

- **Prochaine Action à la Reprise :**
  1.  Poursuivre le **Plan d'Action Prochaine Session** défini ci-dessous, en commençant par l'ajout des métriques "Total Utilisateurs" et "Total Épargné".
  
---

### PLAN D'ACTION PROCHAINE SESSION

1.  **Ajouter les Nouvelles Métriques :**
    -   **Backend :**
        -   Créer les fonctions de calcul pour le **nombre total d'utilisateurs** et le **total épargné** dans `analyticsService.js`.
        -   Ajouter ces nouvelles données à la réponse de l'endpoint `/api/analytics/overview`.
    -   **Frontend :**
        -   Connecter les cartes "Total Utilisateurs" et "Total Épargné" aux nouvelles données de l'API.

2.  **(Plus tard) Taux de Rétention :** Le calcul du taux de rétention est plus complexe et sera traité dans une phase ultérieure.

---

### JOURNAL DES DÉCISIONS

- **25/06/2025 :** Décision de créer un projet séparé pour le dashboard admin afin de ne pas mélanger le code de l'application principale avec les outils internes.
- **25/06/2025 :** Choix de Vite pour sa légèreté et sa rapidité, idéales pour un projet interne simple.
- **25/06/2025 :** L'authentification se fera pour l'instant en partageant un token JWT valide de l'application principale. Une solution plus robuste (login admin dédié) sera envisagée plus tard si nécessaire.

---

### ACCÈS ET DÉPLOIEMENT

- **Accès en Développement :** Le tableau de bord est accessible localement en exécutant `npm run dev` dans le dossier `admin-dashboard`, via l'URL fournie (ex: `http://localhost:5173`).
- **Accès en Production :** Le projet sera déployé sur un service d'hébergement web (ex: Vercel, Netlify) pour le rendre accessible à l'équipe via une URL publique et sécurisée. Le déploiement se fera automatiquement à partir du dépôt GitHub. 